//판매대 역할을 하는  buffer 클래스 작성

class buffer{
	//피자 순서를 저장하기 위한 멤버 변수
	int data;
	//뛰어졌는지 체크하기 위한 변수
	boolean empty;
	public buffer(){
		empty = true;
	}
	//동기화 제어를 위해 get, put은 synchronized메소드를 사용
	public synchronized int get(){
		//버퍼에 데이터가 없으면 wait()해야 한다.
		while(empty){
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		//여기에 도달하면 empty가 false라는 이야기 : 물건이 있다.
		empty = true;
		notifyAll();//생산자를 깨워라.
		return data;
	}
	public synchronized void put(int input){
		//버퍼에 데이터가 있으면 wait를 해야 한다.
		while(!empty){
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		//여기에 도달하면 empty가 true라는 이야기 : 물건이 없다.
		empty = false;
		data = input;
		notifyAll();
		return;
	}
}
//생산자 클래스를 만들자
class 프로듀사 extends Thread{
	//멤버 변수
	buffer mybuffer;
	//생성자
	public 프로듀사(buffer input){
		mybuffer = input;
	}
	@Override
	public void run() {
		for(int i = 0;i<100;i++){
			mybuffer.put(i);
			System.out.println("생산자"+i+"번째 폐자 생산");
		}
	}
	
}
public class WDB{
	public static void main(String args[]){
		
	}
}